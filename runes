#!/usr/bin/env sh

# Set up the actual work of translation
translate()
{
    echo "$1" | tr '[:upper:]' '[:lower:]' |
    sed 's/th/ᚦ/g;
        s/ng/ᛜ/g;
        s/[kc]/ᚲ/g;
        s/[vw]/ᚹ/g;
        s/[jy]/ᛃ/g;
        s/a/ᚨ/g;
        s/b/ᛒ/g;
        s/d/ᛞ/g;
        s/e/ᛖ/g;
        s/f/ᚠ/g;
        s/g/ᚷ/g;
        s/h/ᚻ/g;
        s/i/ᛁ/g;
        s/l/ᛚ/g;
        s/m/ᛗ/g;
        s/n/ᚾ/g;
        s/o/ᛟ/g;
        s/p/ᛈ/g;
        s/r/ᚱ/g;
        s/s/ᛋ/g;
        s/t/ᛏ/g;
        s/u/ᚢ/g;
        s/z/ᛉ/g'
}


# If first argument is a file then translate and output
# the entire files contents
if [ -f "$1" ]; then
    while read -r line
    do
      translate "$line"
    done < "$1"
    exit 0
fi

# If input is standard input like echo "text" it translates
if [ -n "$1" ]; then
    for word in "$@"
    do
        translate "$word" | tr "\n" " "
    done
    echo && exit 0
fi

# Interactive mode to read line after line of user
# supplied standard input, or will allow piping strings in
# or cat a whole file and pipe that in.
while read -r line
do
  translate "$line"
done < '/dev/stdin'
exit 0
